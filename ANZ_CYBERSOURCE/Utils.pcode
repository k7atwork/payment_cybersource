/*--------------------[ ANU Customisations ]--------------------
INC0394481, K7, 2021-09-09
 - Initial Build
---------------------------------------------------------------*/
import ANU_SYSTEM:Environment;

class Utils
   method prepareJSONfromArray(&inArray As array of array of string) Returns JsonObject;
   method parseJSONfromString(&inJSONstring As string) Returns JsonObject;
   
   method getPropertyAsString(&JSON_Object As JsonObject, &propertyName As string) Returns string;
   method getPropertyAsArray(&JSON_Object As JsonObject, &propertyName As string) Returns array of string;
   method getPropertyAsObject(&JSON_Object As JsonObject, &propertyName As string) Returns JsonObject;
   
   method print(&JSON_Object As JsonObject);
   
   method errorLog(&errMsg As string);
   
   method HmacSHA256_JAVA(&messageStr As string, &secretStr As string) Returns string;
   method HmacSHA256_JAVA_DecodeBase64Key(&messageStr As string, &secretStr As string) Returns string;
   
   method parsePaymentReference(&pymntRefNbr As string, &getValueFor As string) Returns string;
   
   method getRedirectDetails(&GUID As string, &pageTitle As string out, &redirectURL As string out);
   
   method getDateTimeInUTC(&inDateTime As datetime) Returns string;
   
   method getPaymentConfigRecord() Returns Record;
   
   method removePortFromURL(&inURL As string) Returns string;
   
   property number retryAttempts get;
   property number waitInSecs get;
   
   property boolean isEnvProduction get;
   
end-class;


Declare Function GetUniHeaderHTML PeopleCode WEBLIB_PORTAL.PORTAL_HEADER FieldFormula;
Declare Function SetDocDomainToAuthTokenDomain PeopleCode FUNCLIB_PORTAL.TEMPLATE_FUNC FieldFormula;

Component Record &recConfig;

method errorLog
   /+ &errMsg as String +/
   
   Local string &fallBackURL = GenerateComponentPortalURL(%Portal, %Node, MenuName.ANU_ISIS, "GBL", Component.ANU_CHARGES_TO_PAY, Page.ANU_CHARGES_TO_PAY, "U");
   
   Local string &domainScriptHTML = SetDocDomainToAuthTokenDomain();
   
   %Response.WriteLine(GetHTMLText(HTML.ANU_PAYMENT_ERROR_PAGE_HEADER, GetUniHeaderHTML("", "", "", "", ""), &errMsg, &fallBackURL, &domainScriptHTML));
   
end-method;


method HmacSHA256_JAVA
   /+ &messageStr as String, +/
   /+ &secretStr as String +/
   /+ Returns String +/
   
   Local string &returnStr;
   
   try
      
      /*--[ Derived Logic from PTSF_ES.ESIMPL.JsonService.OnExecute -- method hmacAuthenticationHeader ]--*/
      Local object &oByteStr = CreateJavaObject("java.lang.String", &secretStr);
      Local object &signingKey = CreateJavaObject("javax.crypto.spec.SecretKeySpec", &oByteStr.getBytes("UTF8"), "HmacSHA256");
      Local object &mac = GetJavaClass("javax.crypto.Mac").getInstance("HmacSHA256");
      &mac.init(&signingKey);
      
      Local object &hmacbytes = &mac.doFinal(CreateJavaObject("java.lang.String", &messageStr).getBytes("UTF8"));
      
      Local object &oEncoder = CreateJavaObject("com.peoplesoft.tools.util.Base64");
      Local string &authenc = &oEncoder.encode(&hmacbytes);
      
      &returnStr = &authenc;
      
   catch Exception &ex
      Return &ex.ToString();
   end-try;
   
   Return &returnStr;
   
end-method;



method HmacSHA256_JAVA_DecodeBase64Key
   /+ &messageStr as String, +/
   /+ &secretStr as String +/
   /+ Returns String +/
   
   Local string &returnStr;
   
   try
      
      Local JavaObject &decoder = GetJavaClass("com.peoplesoft.tools.util.Base64");
      Local JavaObject &decodedBytes = &decoder.decode(&secretStr);
      
      Local object &signingKey = CreateJavaObject("javax.crypto.spec.SecretKeySpec", &decodedBytes, "HmacSHA256");
      Local object &mac = GetJavaClass("javax.crypto.Mac").getInstance("HmacSHA256");
      &mac.init(&signingKey);
      
      Local object &hmacbytes = &mac.doFinal(CreateJavaObject("java.lang.String", &messageStr).getBytes("UTF8"));
      
      Local object &oEncoder = CreateJavaObject("com.peoplesoft.tools.util.Base64");
      Local string &authenc = &oEncoder.encode(&hmacbytes);
      
      &returnStr = &authenc;
      
   catch Exception &ex
      Return &ex.ToString();
   end-try;
   
   Return &returnStr;
   
end-method;


method prepareJSONfromArray
   /+ &inArray as Array2 of String +/
   /+ Returns JsonObject +/
   
   Local JsonBuilder &jsonBuilder = CreateJsonBuilder();
   Local number &i, &j, &z;
   
   If &jsonBuilder.StartObjectReturnsTrue("Request") Then
      For &i = 1 To &inArray.Len
         For &j = 2 To &inArray [&i].Len
            If Find(",", &inArray [&i][&j]) = 0 Then
               /*--[ Create Property ]--*/
               &jsonBuilder.AddProperty(&inArray [&i][1], &inArray [&i][&j])
            Else
               /*--[ Create Array ]--*/
               &jsonBuilder.StartArray(&inArray [&i][1]);
               Local array of string &elements = Split(&inArray [&i][&j], ",");
               For &z = 1 To &elements.Len
                  &jsonBuilder.AddElement(&elements [&z]);
               End-For;
               &jsonBuilder.EndArray(&inArray [&i][1]);
            End-If;
         End-For;
      End-For;
      &jsonBuilder.EndObject("Request");
   End-If;
   
   Return &jsonBuilder.GetRootNode().GetJsonObject();
   
end-method;


method parseJSONfromString
   /+ &inJSONstring as String +/
   /+ Returns JsonObject +/
   
   Local JsonParser &parser = CreateJsonParser();
   
   Local boolean &bParseResult = &parser.Parse(&inJSONstring);
   Local JsonObject &rootObj;
   
   If &bParseResult Then
      &rootObj = &parser.GetRootObject();
   End-If;
   
   Return &rootObj;
   
end-method;


method getPropertyAsString
   /+ &JSON_Object as JsonObject, +/
   /+ &propertyName as String +/
   /+ Returns String +/
   
   Local string &propertyValue;
   
   If &JSON_Object.IsJsonArray(&propertyName) Then
      &propertyValue = &JSON_Object.GetJsonArray(&propertyName).ToString();
   Else
      &propertyValue = &JSON_Object.GetString(&propertyName);
   End-If;
   
   Return &propertyValue;
   
end-method;


method getPropertyAsArray
   /+ &JSON_Object as JsonObject, +/
   /+ &propertyName as String +/
   /+ Returns Array of String +/
   
   Local array of string &returnArray = CreateArrayRept("", 0);
   
   If &JSON_Object.IsJsonArray(&propertyName) Then
      
      Local JsonArray &jsonArray = &JSON_Object.GetJsonArray(&propertyName);
      
      Local number &i;
      
      For &i = 1 To &jsonArray.Size
         &returnArray.Push(&jsonArray.GetString(&i));
      End-For;
      
   End-If;
   
   Return &returnArray;
   
end-method;


method getPropertyAsObject
   /+ &JSON_Object as JsonObject, +/
   /+ &propertyName as String +/
   /+ Returns JsonObject +/
   
   Local JsonObject &returnJSON_Obj;
   
   If &JSON_Object.IsJsonObject(&propertyName) Then
      
      &returnJSON_Obj = &JSON_Object.GetJsonObject(&propertyName);
      
   End-If;
   
   Return &returnJSON_Obj;
   
end-method;


method print
   /+ &JSON_Object as JsonObject +/
   
   %Response.WriteLine(&JSON_Object.ToString());
   %Response.WriteLine("<br/><br/>");
   
   Local number &i;
   
   For &i = 1 To &JSON_Object.ChildCount
      
      Local string &propertyName, &propertyValue;
      &propertyName = &JSON_Object.GetPropertyNameAt(&i);
      
      If &JSON_Object.IsJsonArray(&propertyName) Then
         &propertyValue = %This.getPropertyAsArray(&JSON_Object, &propertyName).Join(", ");
      Else
         &propertyValue = %This.getPropertyAsString(&JSON_Object, &propertyName);
      End-If;
      
      %Response.WriteLine(&propertyName | " = " | &propertyValue);
      %Response.WriteLine("<br/>");
   End-For;
   
end-method;


method parsePaymentReference
   /+ &pymntRefNbr as String, +/
   /+ &getValueFor as String +/
   /+ Returns String +/
   
   Local array of string &splitVals = Split(&pymntRefNbr, "-");
   
   If &splitVals.Len = 3 Then
      Evaluate &getValueFor
      When = "COMMON_ID"
         Return &splitVals [1];
         Break;
      When = "SA_ID_TYPE"
         Return Substring(&splitVals [3], 1, 1);
         Break;
      When = "ANU_PAYMENT_TYPE"
         Return &splitVals [2];
         Break;
      When = "ANU_PAYMENT_ID"
         Return Substring(&splitVals [1], 2, Len(&splitVals [3]) - 1);
         Break;
      When-Other
         Return "";
         Break;
      End-Evaluate;
   End-If;
   
end-method;


method getRedirectDetails
   /+ &GUID as String, +/
   /+ &pageTitle as String out, +/
   /+ &redirectURL as String out +/
   
   Local string &TxnRefNbr;
   
   SQLExec("SELECT ANU_TRANS_REF FROM PS_ANU_ANZ_TRANSAC WHERE GUID=:1", &GUID, &TxnRefNbr);
   
   Local string &redirMenu, &redirComp, &redirPage;
   
   Evaluate %This.parsePaymentReference(&TxnRefNbr, "ANU_PAYMENT_TYPE")
   When = "F"
   When = "T"
   When = "M"
      &redirMenu = MenuName.ANU_ISIS;
      &redirComp = Component.ANU_DIALECT_DR;
      &redirPage = Page.ANU_DIALECT_DR;
      Break;
   When = "A"
   When = "X"
      &redirMenu = MenuName.ANU_ISIS;
      &redirComp = Component.ANU_AHEGS_DLECT_DR;
      &redirPage = Page.ANU_AHEGS_DIALECT;
      Break;
   When-Other
      
   End-Evaluate;
   
   Local array of any &returnCols = CreateArrayAny();
   
   SQLExec("SELECT PORTAL_NAME, PORTAL_OBJNAME, PORTAL_LABEL FROM PSPRSMDEFN WHERE PORTAL_URI_SEG1=:1 AND PORTAL_URI_SEG2=:2", &redirMenu, &redirComp, &returnCols);
   
   /*%This.pageTitle = &returnCols [3];
   %This.redirectURL = GenerateComponentPortalURL(%Portal, %Node, @("MenuName." | &redirMenu), "GBL", @("Component." | &redirComp), @("Page." | &redirPage), "U");*/
   
   Local ApiObject &Portal, &cref;
   
   &Portal = %Session.GetPortalRegistry();
   
   If Not &Portal.Open(&returnCols [1]) Then
      Error MsgGet(95, 5021, "Error opening portal: %1.", "EMPLOYEE");
   End-If;
   
   &cref = &Portal.FindCRefByName(&returnCols [2]);
   If &cref <> Null Then
      &pageTitle = &cref.Label;
      &redirectURL = &cref.AbsolutePortalURL;
      
      If Find("?", &redirectURL) = 0 Then
         &redirectURL = &redirectURL | "?";
      End-If;
      &redirectURL = &redirectURL | "&Page=" | &redirPage;
   Else
      Error "Unable to find the redirect URL";
   End-If;
   
end-method;


method getDateTimeInUTC
   /+ &inDateTime as DateTime +/
   /+ Returns String +/
   
   Local string &UTC_DateTime = FormatDateTime(&inDateTime, "UTC", False);
   Local string &outDateTime = Substring(&UTC_DateTime, 1, 10) | "T" | Substring(&UTC_DateTime, 12, 2) | ":" | Substring(&UTC_DateTime, 15, 2) | ":" | Substring(&UTC_DateTime, 18, 2) | "Z";
   
   Return &outDateTime;
   
end-method;


method getPaymentConfigRecord
   /+ Returns Record +/
   
   If &recConfig = Null Then
      &recConfig = CreateRecord(Record.ANU_SF_CORP_INF);
      &recConfig.ANU_INSTITUTE_ID.Value = "1";
      SQLExec("%SelectByKeyEffdt(:1,:2)", &recConfig, %Date, &recConfig);
   End-If;
   
   Return &recConfig;
   
end-method;


get retryAttempts
   /+ Returns Number +/
   
   Local number &retryAtmpts = %This.getPaymentConfigRecord().RETRYCOUNT.Value;
   
   If &retryAtmpts <= 0 Then
      &retryAtmpts = 6;
   End-If;
   
   Return &retryAtmpts;
   
end-get;


get waitInSecs
   /+ Returns Number +/
   
   Local number &waitTime = %This.getPaymentConfigRecord().TIMEOUT.Value;
   
   If &waitTime > 0 Then
      Return &waitTime * 1000;
   Else
      Return 5000;
   End-If;
   
end-get;


method removePortFromURL
   /+ &inURL as String +/
   /+ Returns String +/
   
   Local string &respURL, &urlScheme, &port;
   
   Local number &pos1, &pos2;
   
   &pos1 = Find(":", &inURL);
   
   If &pos1 > 0 Then
      &urlScheme = Substring(&inURL, 1, &pos1 - 1);
      
      Evaluate &urlScheme
      When = "http"
      When = "https"
         &pos1 = Find(":", &inURL, &pos1 + 1);
      End-Evaluate;
   End-If;
   
   &pos2 = Find("/", &inURL, &pos1);
   
   If &pos1 > 0 And
         &pos2 > &pos1 Then
      &port = Substring(&inURL, &pos1, &pos2 - &pos1);
      &respURL = Substitute(&inURL, &port, "");
   Else
      &respURL = &inURL;
   End-If;
   
   Return &respURL;
   
end-method;


get isEnvProduction
   /+ Returns Boolean +/
   
   Local ANU_SYSTEM:Environment &env = create ANU_SYSTEM:Environment();
   
   If &env.SystemType = "PRD" Then
      Return True;
   End-If;
   
   Return False;
   
end-get;
